{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterExport": {
        "description": "ClusterExport is the Schema for the clusterexports API",
        "properties": {
          "apiVersion": {
            "default": "influxdb.eda.nokia.com/v1alpha1",
            "pattern": "^influxdb\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to influxdb.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterExport",
            "pattern": "^ClusterExport$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterExport",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport_metadata"
          },
          "spec": {
            "description": "ClusterExportSpec defines the desired state of ClusterExport",
            "properties": {
              "description": {
                "description": "A short description of the export rules.",
                "title": "Description",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 10
                }
              },
              "enabled": {
                "default": true,
                "description": "Specifies if the Export rules are enabled or not.",
                "title": "Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-order-priority": 10
                }
              },
              "exports": {
                "description": "List of export rules defining which EDB tables are exported to InfluxDB.",
                "properties": {
                  "alarms": {
                    "description": "Defines Alarms as export source",
                    "properties": {
                      "exclude": {
                        "description": "List of Alarm types to exclude.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Exclude",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 160,
                          "ui-single-line-group": "IncludeExclude"
                        }
                      },
                      "include": {
                        "description": "List of Alarm types to include. Set it to '*' to include all alarms.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Include",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 150,
                          "ui-single-line-group": "IncludeExclude"
                        }
                      },
                      "namespaces": {
                        "description": "List of namespaces to include alarms from. Omit to include all namespaces.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Namespaces",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 140
                        }
                      }
                    },
                    "title": "Alarms",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 100,
                      "ui-presence-toggle": true
                    }
                  },
                  "query": {
                    "description": "Defines a custom query as export source",
                    "items": {
                      "properties": {
                        "customization": {
                          "description": "InfluxDB data point manipulation.",
                          "properties": {
                            "fields": {
                              "description": "Field names customization",
                              "items": {
                                "properties": {
                                  "match": {
                                    "description": "A regular expression to be matched against the measurement name",
                                    "title": "Match",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 2,
                                      "ui-single-line-group": "REGEX"
                                    }
                                  },
                                  "replacement": {
                                    "description": "A regular expression replacement to be applied to the measurement name",
                                    "title": "Replacement",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 2,
                                      "ui-single-line-group": "REGEX"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "title": "Fields",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 500
                              }
                            },
                            "measurement": {
                              "description": "Measurement name renaming regex and replacement",
                              "properties": {
                                "match": {
                                  "description": "A regular expression to be matched against the measurement name",
                                  "title": "Match",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 2,
                                    "ui-single-line-group": "REGEX"
                                  }
                                },
                                "replacement": {
                                  "description": "A regular expression replacement to be applied to the measurement name",
                                  "title": "Replacement",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 2,
                                    "ui-single-line-group": "REGEX"
                                  }
                                }
                              },
                              "title": "Measurement",
                              "type": "object",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 410
                              }
                            },
                            "tags": {
                              "description": "Tags customization",
                              "items": {
                                "properties": {
                                  "delimiter": {
                                    "default": "=",
                                    "description": "Delimiter to join the tag name and value",
                                    "title": "Delimiter",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 3,
                                      "ui-order-priority": 120,
                                      "ui-single-line-group": "TAGRULE"
                                    }
                                  },
                                  "match": {
                                    "description": "A regular expression to be matched against tag_name + delimiter + tag_value",
                                    "title": "Match",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 3,
                                      "ui-order-priority": 100,
                                      "ui-single-line-group": "TAGRULE"
                                    }
                                  },
                                  "replacement": {
                                    "description": "A regular expression replacement to be applied to tag_name + delimiter + tag_value",
                                    "title": "Replacement",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 3,
                                      "ui-order-priority": 110,
                                      "ui-single-line-group": "TAGRULE"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "title": "Tags",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 450
                              }
                            }
                          },
                          "title": "Customization",
                          "type": "object",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 400,
                            "ui-presence-toggle": true
                          }
                        },
                        "fields": {
                          "description": "Fields to export from the EDB table set in Path.\nExports all fields if not specified.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Fields",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 360,
                            "ui-single-line-group": "Filter"
                          }
                        },
                        "mode": {
                          "default": "on-change",
                          "description": "Export mode.",
                          "enum": [
                            "on-change",
                            "periodic",
                            "both"
                          ],
                          "title": "Mode",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 380,
                            "ui-single-line-group": "Periodic"
                          }
                        },
                        "path": {
                          "description": "The EDB path to export, in the format '.node.srl.interface'.\nShould NOT include the namespace path element.",
                          "title": "Path",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 350
                          }
                        },
                        "period": {
                          "description": "Export period. Applicable when mode is set to 'periodic' or 'both'.",
                          "title": "Period",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 390,
                            "ui-single-line-group": "Periodic",
                            "ui-visible-if": "self.mode === \"periodic\" || self.mode === \"both\""
                          }
                        },
                        "where": {
                          "description": "A where clause to use for the query, e.g. 'oper-state = down'. You can omit enclosing parentheses.",
                          "title": "Where",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 370,
                            "ui-single-line-group": "Filter"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "title": "Query",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 300,
                      "ui-presence-toggle": true
                    }
                  },
                  "resource": {
                    "description": "Defines EDA resources as export source",
                    "items": {
                      "properties": {
                        "group": {
                          "description": "The resource group.",
                          "title": "Group",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 3,
                            "ui-order-priority": 250,
                            "ui-single-line-group": "GVK"
                          }
                        },
                        "kind": {
                          "description": "The resource kind.",
                          "title": "Kind",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 3,
                            "ui-order-priority": 270,
                            "ui-single-line-group": "GVK"
                          }
                        },
                        "name": {
                          "description": "The resource name to export. Omit to export all resources based on their GVK",
                          "title": "Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 210
                          }
                        },
                        "namespaces": {
                          "description": "List of namespaces to include resources from. Omit to include all namespaces.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Namespaces",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 200
                          }
                        },
                        "version": {
                          "description": "The resource version.",
                          "title": "Version",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 3,
                            "ui-order-priority": 260,
                            "ui-single-line-group": "GVK"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "title": "Resource",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 200,
                      "ui-presence-toggle": true
                    }
                  }
                },
                "title": "Exports",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "servers": {
                "description": "List of influxDB server destination where EDB tables must be written.",
                "items": {
                  "properties": {
                    "bucket": {
                      "description": "InfluxDB Bucket Name.",
                      "title": "Bucket",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 110
                      }
                    },
                    "name": {
                      "description": "InfluxDB server Name.",
                      "title": "Name",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-auto-completes": [
                          {
                            "condition": "true",
                            "group": "influxdb.eda.nokia.com",
                            "resource": "clusterservers",
                            "type": "gvr",
                            "version": "v1alpha1"
                          }
                        ],
                        "ui-order-priority": 100
                      }
                    }
                  },
                  "type": "object"
                },
                "title": "Servers",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1000
                }
              }
            },
            "required": [
              "exports",
              "servers"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterExportStatus defines the observed state of ClusterExport",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterExportList": {
        "description": "ClusterExportList is a list of clusterexports",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterExport_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterExport_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterExport_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "influxdb.eda.nokia.com",
                  "kind": "ClusterExport",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterServer": {
        "description": "ClusterServer is the Schema for the clusterservers API",
        "properties": {
          "apiVersion": {
            "default": "influxdb.eda.nokia.com/v1alpha1",
            "pattern": "^influxdb\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to influxdb.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterServer",
            "pattern": "^ClusterServer$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterServer",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer_metadata"
          },
          "spec": {
            "description": "ClusterServerSpec defines the desired state of ClusterServer",
            "properties": {
              "batchSize": {
                "default": 100,
                "description": "Sets number of points sent in single request.",
                "title": "Batch Size",
                "type": "integer",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 40,
                  "ui-single-line-group": "Batch_Flush"
                }
              },
              "credentialsSecret": {
                "description": "Secret containing InfluxDB credentials.\nthe secret must include a username and password keys or a token key.",
                "title": "Credentials",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 20,
                  "ui-single-line-group": "Org_Cred"
                }
              },
              "flushTimer": {
                "default": "10s",
                "description": "Sets the write buffer flush timer.",
                "title": "Flush Timer",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 40,
                  "ui-single-line-group": "Batch_Flush"
                }
              },
              "org": {
                "description": "InfluxDB Organization",
                "title": "Organization",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 20,
                  "ui-single-line-group": "Org_Cred"
                }
              },
              "timestampPrecision": {
                "default": "milliseconds",
                "description": "Sets the timestamp precision to use in writes for timestamp.",
                "enum": [
                  "seconds",
                  "milliseconds",
                  "microseconds",
                  "nanoseconds"
                ],
                "title": "Timestamp Precision",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "TSP_GZIP"
                }
              },
              "tls": {
                "description": "Enable TLS.",
                "properties": {
                  "fromFiles": {
                    "description": "Certificates files.",
                    "properties": {
                      "caFile": {
                        "description": "Path to a certificate authority file.",
                        "title": "CA File",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      },
                      "certFile": {
                        "description": "The client certificate file location.",
                        "title": "Client Certificate",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "keyFile": {
                        "description": "The client private key location.",
                        "title": "Client Private Key",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "skipVerify": {
                        "description": "If true the client will not verify the server's certificate.",
                        "title": "Skip Verify",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      }
                    },
                    "title": "Certificates Files",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  },
                  "fromSecret": {
                    "description": "Secret containing a `tls.crt`, a `tls.key` and a `ca.crt` keys.\nBoth `tls.crt` and `tls.key` must be present. If `ca.crt` is not present\nthe remote server certificate is not verified.",
                    "properties": {
                      "name": {
                        "description": "Secret name containing a ca.crt, a tls.crt and a tls.key keys.",
                        "type": "string"
                      }
                    },
                    "title": "Certificates Secret",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  }
                },
                "title": "TLS",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 80,
                  "ui-presence-toggle": true
                }
              },
              "url": {
                "description": "InfluxDB server URL",
                "title": "URL",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 10
                }
              },
              "useGzip": {
                "description": "When true, the exporter uses GZIP compression in write requests.",
                "title": "Use GZIP",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "TSP_GZIP"
                }
              }
            },
            "required": [
              "credentialsSecret",
              "org",
              "url"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterServerStatus defines the observed state of ClusterServer",
            "properties": {
              "connected": {
                "description": "Specifies if the client is connected to the InfluxDB server",
                "title": "Connected",
                "type": "boolean"
              },
              "error": {
                "description": "Error value if the client is not connected",
                "title": "Error",
                "type": "string"
              },
              "lastChecked": {
                "description": "Last time the connection was checked",
                "format": "date-time",
                "title": "Last Check Time",
                "type": "string"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterServerList": {
        "description": "ClusterServerList is a list of clusterservers",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterServer_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterServer_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.influxdb.v1alpha1.ClusterServer_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "influxdb.eda.nokia.com",
                  "kind": "ClusterServer",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.influxdb.v1alpha1.Export": {
        "description": "Export is the Schema for the exports API",
        "properties": {
          "apiVersion": {
            "default": "influxdb.eda.nokia.com/v1alpha1",
            "pattern": "^influxdb\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to influxdb.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Export",
            "pattern": "^Export$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Export",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export_metadata"
          },
          "spec": {
            "description": "ExportSpec defines the desired state of Export",
            "properties": {
              "description": {
                "description": "A short description of the export rules.",
                "title": "Description",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 10
                }
              },
              "enabled": {
                "default": true,
                "description": "Specifies if the Export rules are enabled or not.",
                "title": "Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-order-priority": 20
                }
              },
              "exports": {
                "description": "List of export rules defining which EDB tables are exported to InfluxDB.",
                "properties": {
                  "alarms": {
                    "description": "Defines Alarms as export source",
                    "properties": {
                      "exclude": {
                        "description": "List of Alarm types to exclude.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Exclude",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 160,
                          "ui-single-line-group": "IncludeExclude"
                        }
                      },
                      "include": {
                        "description": "List of Alarm types to include. Set it to '*' for all.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Include",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 150,
                          "ui-single-line-group": "IncludeExclude"
                        }
                      }
                    },
                    "title": "Alarms",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 50,
                      "ui-presence-toggle": true
                    }
                  },
                  "query": {
                    "description": "Defines a custom query as export source",
                    "items": {
                      "properties": {
                        "customization": {
                          "description": "InfluxDB data point manipulation.",
                          "properties": {
                            "fields": {
                              "description": "Field names customization",
                              "items": {
                                "properties": {
                                  "match": {
                                    "description": "A regular expression to be matched against the measurement name",
                                    "title": "Match",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 2,
                                      "ui-single-line-group": "REGEX"
                                    }
                                  },
                                  "replacement": {
                                    "description": "A regular expression replacement to be applied to the measurement name",
                                    "title": "Replacement",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 2,
                                      "ui-single-line-group": "REGEX"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "title": "Fields",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 500
                              }
                            },
                            "measurement": {
                              "description": "Measurement name renaming regex and replacement",
                              "properties": {
                                "match": {
                                  "description": "A regular expression to be matched against the measurement name",
                                  "title": "Match",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 2,
                                    "ui-single-line-group": "REGEX"
                                  }
                                },
                                "replacement": {
                                  "description": "A regular expression replacement to be applied to the measurement name",
                                  "title": "Replacement",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 2,
                                    "ui-single-line-group": "REGEX"
                                  }
                                }
                              },
                              "title": "Measurement",
                              "type": "object",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 410
                              }
                            },
                            "tags": {
                              "description": "Tags customization",
                              "items": {
                                "properties": {
                                  "delimiter": {
                                    "default": "=",
                                    "description": "Delimiter to join the tag name and value",
                                    "title": "Delimiter",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 3,
                                      "ui-order-priority": 120,
                                      "ui-single-line-group": "TAGRULE"
                                    }
                                  },
                                  "match": {
                                    "description": "A regular expression to be matched against tag_name + delimiter + tag_value",
                                    "title": "Match",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 3,
                                      "ui-order-priority": 100,
                                      "ui-single-line-group": "TAGRULE"
                                    }
                                  },
                                  "replacement": {
                                    "description": "A regular expression replacement to be applied to tag_name + delimiter + tag_value",
                                    "title": "Replacement",
                                    "type": "string",
                                    "x-eda-nokia-com": {
                                      "ui-column-span": 3,
                                      "ui-order-priority": 110,
                                      "ui-single-line-group": "TAGRULE"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "title": "Tags",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 450
                              }
                            }
                          },
                          "title": "Customization",
                          "type": "object",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 400,
                            "ui-presence-toggle": true
                          }
                        },
                        "fields": {
                          "description": "Fields to export from the EDB table set in Path.\nExports all fields if not specified.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Fields",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 360,
                            "ui-single-line-group": "Filter"
                          }
                        },
                        "mode": {
                          "default": "on-change",
                          "description": "Export mode.",
                          "enum": [
                            "on-change",
                            "periodic",
                            "both"
                          ],
                          "title": "Mode",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 380,
                            "ui-single-line-group": "Periodic"
                          }
                        },
                        "path": {
                          "description": "The EDB path to export, in the format '.node.srl.interface'.\nShould NOT include the namespace path element.",
                          "title": "Path",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 350
                          }
                        },
                        "period": {
                          "description": "Export period. Applicable when mode is set to 'periodic' or 'both'.",
                          "title": "Period",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 390,
                            "ui-single-line-group": "Periodic",
                            "ui-visible-if": "self.mode === \"periodic\" || self.mode === \"both\""
                          }
                        },
                        "where": {
                          "description": "A where clause to use for the query, e.g. 'oper-state = down'. You can omit enclosing parentheses.",
                          "title": "Where",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 370,
                            "ui-single-line-group": "Filter"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "title": "Query",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 300,
                      "ui-presence-toggle": true
                    }
                  },
                  "resource": {
                    "description": "Defines EDA resources as export source",
                    "items": {
                      "properties": {
                        "group": {
                          "description": "The resource group.",
                          "title": "Group",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 3,
                            "ui-order-priority": 250,
                            "ui-single-line-group": "GVK"
                          }
                        },
                        "kind": {
                          "description": "The resource kind.",
                          "title": "Kind",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 3,
                            "ui-order-priority": 270,
                            "ui-single-line-group": "GVK"
                          }
                        },
                        "name": {
                          "description": "The resource name to export. Omit to export all resources based on their GVK",
                          "title": "Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 210
                          }
                        },
                        "version": {
                          "description": "The resource version.",
                          "title": "Version",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 3,
                            "ui-order-priority": 260,
                            "ui-single-line-group": "GVK"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "title": "Resource",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 200,
                      "ui-presence-toggle": true
                    }
                  }
                },
                "title": "Exports",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "servers": {
                "description": "List of influxDB server destination where EDB tables must be written.",
                "items": {
                  "properties": {
                    "bucket": {
                      "description": "InfluxDB Bucket Name.",
                      "title": "Bucket",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 110
                      }
                    },
                    "name": {
                      "description": "InfluxDB server Name.",
                      "title": "Name",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-auto-completes": [
                          {
                            "condition": "true",
                            "group": "influxdb.eda.nokia.com",
                            "resource": "servers",
                            "type": "gvr",
                            "version": "v1alpha1"
                          }
                        ],
                        "ui-order-priority": 100
                      }
                    }
                  },
                  "type": "object"
                },
                "title": "Servers",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1000
                }
              }
            },
            "required": [
              "exports",
              "servers"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ExportStatus defines the observed state of Export",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ExportList": {
        "description": "ExportList is a list of exports",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.Export_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.Export_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.influxdb.v1alpha1.Export_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "influxdb.eda.nokia.com",
                  "kind": "Export",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.influxdb.v1alpha1.Server": {
        "description": "Server is the Schema for the servers API",
        "properties": {
          "apiVersion": {
            "default": "influxdb.eda.nokia.com/v1alpha1",
            "pattern": "^influxdb\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to influxdb.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Server",
            "pattern": "^Server$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Server",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server_metadata"
          },
          "spec": {
            "description": "ServerSpec defines the desired state of Server",
            "properties": {
              "batchSize": {
                "default": 100,
                "description": "Sets number of points sent in single request.",
                "title": "Batch Size",
                "type": "integer",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 40,
                  "ui-single-line-group": "Batch_Flush"
                }
              },
              "credentialsSecret": {
                "description": "Secret containing InfluxDB credentials.\nthe secret must include a username and password keys or a token key.",
                "title": "Credentials",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 20,
                  "ui-single-line-group": "Org_Cred"
                }
              },
              "flushTimer": {
                "default": "10s",
                "description": "Sets the write buffer flush timer.",
                "title": "Flush Timer",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 40,
                  "ui-single-line-group": "Batch_Flush"
                }
              },
              "org": {
                "description": "InfluxDB Organization.",
                "title": "Organization",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 20,
                  "ui-single-line-group": "Org_Cred"
                }
              },
              "timestampPrecision": {
                "default": "milliseconds",
                "description": "Sets the timestamp precision to use in writes for timestamp.",
                "enum": [
                  "seconds",
                  "milliseconds",
                  "microseconds",
                  "nanoseconds"
                ],
                "title": "Timestamp Precision",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "TSP_GZIP"
                }
              },
              "tls": {
                "description": "Enable TLS.",
                "properties": {
                  "fromFiles": {
                    "description": "Certificates files.",
                    "properties": {
                      "caFile": {
                        "description": "Path to a certificate authority file.",
                        "title": "CA File",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      },
                      "certFile": {
                        "description": "The client certificate file location.",
                        "title": "Client Certificate",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "keyFile": {
                        "description": "The client private key location.",
                        "title": "Client Private Key",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "Client Key Pair",
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "KeyPair"
                        }
                      },
                      "skipVerify": {
                        "description": "If true the client will not verify the server's certificate.",
                        "title": "Skip Verify",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-category": "Certificate Authority",
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "CA"
                        }
                      }
                    },
                    "title": "Certificates Files",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  },
                  "fromSecret": {
                    "description": "Secret containing a `tls.crt`, a `tls.key` and a `ca.crt` keys.\nBoth `tls.crt` and `tls.key` must be present. If `ca.crt` is not present\nthe remote server certificate is not verified.",
                    "properties": {
                      "name": {
                        "description": "Secret name containing a ca.crt, a tls.crt and a tls.key keys.",
                        "type": "string"
                      }
                    },
                    "title": "Certificates Secret",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-presence-toggle": true
                    }
                  }
                },
                "title": "TLS",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 80,
                  "ui-presence-toggle": true
                }
              },
              "url": {
                "description": "InfluxDB server URL.",
                "title": "URL",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 10
                }
              },
              "useGzip": {
                "description": "When true, the exporter uses GZIP compression in write requests.",
                "title": "Use GZIP",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 50,
                  "ui-single-line-group": "TSP_GZIP"
                }
              }
            },
            "required": [
              "credentialsSecret",
              "org",
              "url"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ServerStatus defines the observed state of Server",
            "properties": {
              "connected": {
                "description": "Specifies if the client is connected to the InfluxDB server",
                "title": "Connected",
                "type": "boolean"
              },
              "error": {
                "description": "Error value if the client is not connected",
                "title": "Error",
                "type": "string"
              },
              "lastChecked": {
                "description": "Last time the connection was checked",
                "format": "date-time",
                "title": "Last Check Time",
                "type": "string"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.ServerList": {
        "description": "ServerList is a list of servers",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.Server_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.influxdb.v1alpha1.Server_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.influxdb.v1alpha1.Server_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "influxdb.eda.nokia.com",
                  "kind": "Server",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "InfluxDB Exporter Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/influxdb.eda.nokia.com": {
      "get": {
        "description": "list versions available from influxdb.eda.nokia.com",
        "operationId": "getVersionInfluxdbEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from influxdb.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesInfluxdbEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for influxdb.eda.nokia.com v1alpha1",
        "operationId": "uiInfluxdbEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterexports": {
      "delete": {
        "description": "Delete all instances of ClusterExport.  If ClusterExport is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterExport, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterexports",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterExport",
        "operationId": "createInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterexports/_deleted": {
      "get": {
        "operationId": "getDeletedInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterExport that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterexports/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterExport",
        "operationId": "deleteInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterExport.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterExport",
        "operationId": "patchInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterExport",
        "operationId": "replaceInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterexports/{name}/_revs": {
      "get": {
        "operationId": "getHistoryInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterexports/{name}/_topology": {
      "get": {
        "operationId": "getTopologyInfluxdbEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterservers": {
      "delete": {
        "description": "Delete all instances of ClusterServer.  If ClusterServer is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterServer, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterservers",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterServer",
        "operationId": "createInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterservers/_deleted": {
      "get": {
        "operationId": "getDeletedInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterServer that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterservers/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterServer",
        "operationId": "deleteInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "description": "name of the ClusterServer to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterServer.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "description": "name of the ClusterServer",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterServer",
        "operationId": "patchInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterServer",
        "operationId": "replaceInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ClusterServer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterservers/{name}/_revs": {
      "get": {
        "operationId": "getHistoryInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "description": "name of the ClusterServer to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterServer.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/clusterservers/{name}/_topology": {
      "get": {
        "operationId": "getTopologyInfluxdbEdaNokiaComV1alpha1Clusterservers",
        "parameters": [
          {
            "description": "name of the ClusterServer to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterServer.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/exports": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listInfluxdbEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list exports",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports": {
      "delete": {
        "operationId": "deleteAllInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Export in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list exports in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Export",
        "operationId": "createInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/_deleted": {
      "get": {
        "operationId": "getDeletedInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Export that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/{name}": {
      "delete": {
        "description": "delete the specified Export",
        "operationId": "deleteInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Export to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Export.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "name of the Export",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Export",
        "operationId": "patchInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Export",
        "operationId": "replaceInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/{name}/_revs": {
      "get": {
        "operationId": "getHistoryInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "name of the Export to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Export.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/{name}/_topology": {
      "get": {
        "operationId": "getTopologyInfluxdbEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "name of the Export to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Export.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/servers": {
      "delete": {
        "operationId": "deleteAllInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ServerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Server in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ServerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list servers in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Server",
        "operationId": "createInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/servers/_deleted": {
      "get": {
        "operationId": "getDeletedInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Server that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/servers/{name}": {
      "delete": {
        "description": "delete the specified Server",
        "operationId": "deleteInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Server to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Server.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "description": "name of the Server",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Server",
        "operationId": "patchInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Server",
        "operationId": "replaceInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.Server"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/servers/{name}/_revs": {
      "get": {
        "operationId": "getHistoryInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "description": "name of the Server to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Server.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/namespaces/{namespace}/servers/{name}/_topology": {
      "get": {
        "operationId": "getTopologyInfluxdbEdaNokiaComV1alpha1NamespaceServers",
        "parameters": [
          {
            "description": "name of the Server to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Server.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/influxdb.eda.nokia.com/v1alpha1/servers": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listInfluxdbEdaNokiaComV1alpha1Servers",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.influxdb.v1alpha1.ServerList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list servers",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}